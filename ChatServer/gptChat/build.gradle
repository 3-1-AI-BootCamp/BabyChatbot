plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'com.theokanning.openai-gpt3-java:service:0.13.0'
	implementation 'com.theokanning.openai-gpt3-java:client:0.13.0'
	implementation 'com.theokanning.openai-gpt3-java:api:0.13.0'

	//mongoDB 종속성 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.mongodb:mongodb-driver-sync:5.1.2'

	// Security용
	annotationProcessor 'org.projectlombok:lombok'

	// DJL Core API
	implementation 'ai.djl:api:0.29.0'

	// DJL PyTorch Engine
	implementation 'ai.djl.pytorch:pytorch-engine:0.29.0'

	// DJL Hugging Face Tokenizers
	implementation 'ai.djl.huggingface:tokenizers:0.29.0'

	// DJL Basic Dataset (for Translate)
	implementation 'ai.djl:basicdataset:0.29.0'

	// DJL PyTorch Model Zoo (for Sentence Transformers)
	implementation 'ai.djl.pytorch:pytorch-model-zoo:0.29.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
